Пример создания WebService с помощью Framework
XFire

( создается интерфейс, который будет виден из вне,
  создается его имплементация,
	(конструкторы объектов - обязательно без параметров,
	 если возвращается сложный объект, его field должны быть Serialization(maybe)
	 конструкторы возвращаемых объектов - без параметров )
  затем эти данные публикуются в META-INF/xfire/services.xml - можно скопировать данный катлог в "src"
  имя services - соответсвтует прописанному в web.xml (ссылку services можно изменять)
  )

Возможный принцип работы XFire c переданными объектами в виде параметров или возвращаемых объектов:
	- маршалинг: объект анализируется на наличие Get - методов и извлекается в транзитный вид
	- демаршалинг: объект создается с помощью конструктора по умолчанию, для каждого Get метода производится установка в Set метод
( другими словами, объекты могут отличаться на сервере от клиента, например, может быть добавлен конструктор, но не полный пакетный 
путь к самому классу, иначе объект не сможет быть создан )

Очень важное ограничение при создании XFire на основании передачи параметров и/или возвращаемых параметров:
	- объекты должны создаваться с полным набором get-ов и set-ов, и только с ними, без дополнительных методов ( типа size, append...)

( Если XFire пишет что не может создать объект 
- проверьте наличие конструктора по-умолчанию)

Если следующая ошибка:
Could not invoke service.. Nested exception is org.codehaus.xfire.fault.XFireFault: Couldn't send message.
 - проверить конструкторы сервисов и передаваемых объектов 
 - проверить наличие созданных сервисов XFire (<full_path>/services)

Если следующая ошибка:
Could not invoke service.. Nested exception is org.codehaus.xfire.fault.XFireFault: No write method for property {http://common.web_service.module.fenomen}empty in class fenomen.module.web_service.common.ModuleTaskContainer
проверить чтобы у каждого get-а был набор set-ов

нельзя пересылать в качестве объектов null - ругается


нельзя пересылать в качестве объектов Object - ругается
( нельзя пересылать Object внутри объектов - ругается, нужно уменьших объем объекта до какого-либо конкретного )

можно передавать только конкретные типы, ни в коем случае не использовать Полиморфизм 
(такое впечателние что при маршалинге/де-маршалинге не используется рефлексия)

Если возникает подобная ошибка
Could not find valid implementation for: 2.0
это признак несогласованности библиотек Spring 
(например Wicket 1.4 + XFire не запустится, если в составе Wicket библиотек будут spring-2.5.6.jar; wicket-spring-1.4-rc4.jar)